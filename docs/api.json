{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "Global Digital Program Repository API",
    "description": "# Introduction\nThis API supports the front-end for the Global Digital Program Repository project. It can be used to create and modify the profiles of Authors and post/edit Programs.\n\n# Overview\nThis API is built using Express. It currently uses a simple JSON file (wrapped with [lowdb](https://github.com/typicode/lowdb)) to store data. \n\n# Error Codes\n - 400 - Bad Request: You have used the wrong Content-Type for the request you are sending\n - 403 - Forbidden: You do not have permission for this action\n - 404 - Not Found: Either you have made a mistake in your path, or what you are searching for (a Program or Author profile) does not exist\n - 413 - Request Too Long: (when uploading images) You went over the file size limit\n - 422 - Unprocessable Entity: Validation of your request body/query failed. Make sure it matches the schema\n - 424 - Failed Dependency: The `authorId` or `sessionId` you provided does not match an existing author\n",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000",
      "description": "Default"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/author": {
      "post": {
        "summary": "Create a new Author",
        "operationId": "postAuthor",
        "tags": [
          "Authors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string",
                    "pattern": "/^[a-z ]+$/i",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response: Created - Profile of newly POSTed Author",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "email"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "/^[a-z ]+$/i",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request - Request body has wrong Content Type (should be application/json)",

          },
          "409": {
            "description": "Error: Conflict - Attempted to create an Author with an already taken Id",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request body failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/author/{id}": {
      "get": {
        "summary": "Details about an Author",
        "operationId": "getAuthor",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the Author",
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response: Ok - Author profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "email"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "/^[a-z ]+$/i",
                      "minLength": 1
                    },
                    "registrationDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error: Not Found - Attempted to view or modify the profile of an Author that doesn't exist",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request path failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit an Author's profile",
        "operationId": "putAuthor",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the Author",
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "email"
                  },
                  "sessionId": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string",
                    "pattern": "/^[a-z ]+$/i",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response: Ok - Modified Author profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "email"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "/^[a-z ]+$/i",
                      "minLength": 1
                    },
                    "registrationDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request - Request body has wrong Content Type (should be application/json)",

          },
          "403": {
            "description": "Error: Forbidden - Attempted to modify someone else's profile",

          },
          "404": {
            "description": "Error: Not Found - Attempted to modify the profile of an Author that doesn't exist",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request body failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an Author's profile",
        "operationId": "deleteAuthor",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the Author",
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Error: Forbidden - Deleting profiles is not allowed. Would you delete a person off the street?",

          }
        }
      }
    },
    "/program": {
      "get": {
        "summary": "Get one or more program objects",
        "operationId": "getProgram",
        "tags": [
          "Programs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Exact Id of the program",
            "schema": {
              "type": "string",
              "pattern": "/^[a-zA-Z0-9_-]*$/i",
              "minLength": 21,
              "maxLength": 21
            },
            "required": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start index of paginated search (zero-based)",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "required": false
          },
          {
            "name": "stop",
            "in": "query",
            "description": "Stop index of paginated search (non-inclusive)",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response: Ok - Search results (in an array)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "/^[a-zA-Z0-9_-]*$/i",
                        "minLength": 21,
                        "maxLength": 21
                      },
                      "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 69
                      },
                      "description": {
                        "type": "string"
                      },
                      "authorId": {
                        "type": "string",
                        "format": "email"
                      },
                      "author": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "email"
                          },
                          "name": {
                            "type": "string",
                            "pattern": "/^[a-z ]+$/i",
                            "minLength": 1
                          },
                          "registrationDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "creationDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "modificationDate": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error: Not Found - No matching programs found"
          },
          "422": {
            "description": "Error: Unprocessable Entity - Query failed validation (when using Id parameter)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Program",
        "operationId": "postProgram",
        "tags": [
          "Programs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId",
                  "title",
                  "description"
                ],
                "properties": {
                  "authorId": {
                    "type": "string",
                    "format": "email"
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 69
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response: Created - New program object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "/^[a-zA-Z0-9_-]*$/i",
                      "minLength": 21,
                      "maxLength": 21
                    },
                    "title": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 69
                    },
                    "description": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modificationDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request - Request body has wrong Content Type (should be application/json)",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request body failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "424": {
            "description": "Error: Failed Dependency - Author with the given Id could not be found",

          }
        }
      },
      "put": {
        "summary": "Edit an existing Program",
        "operationId": "putProgram",
        "tags": [
          "Programs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 69
                  },
                  "description": {
                    "type": "string"
                  },
                  "sessionId": {
                    "type": "string",
                    "format": "email"
                  },
                  "authorId": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response: Ok - Edited program object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "/^[a-zA-Z0-9_-]*$/i",
                      "minLength": 21,
                      "maxLength": 21
                    },
                    "title": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 69
                    },
                    "description": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modificationDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request - Request body has wrong Content Type (should be application/json)",

          },
          "403": {
            "description": "Error: Forbidden - SessionId provided does not match the Program owner Id",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request body failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Program",
        "operationId": "deleteProgram",
        "tags": [
          "Programs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Exact Id of the program",
            "schema": {
              "type": "string",
              "pattern": "/^[a-zA-Z0-9_-]*$/i",
              "minLength": 21,
              "maxLength": 21
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "sessionId"
                ],
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response: Ok - The program has been deleted"
          },
          "400": {
            "description": "Error: Bad Request - Request body has wrong Content Type (should be application/json)",

          },
          "403": {
            "description": "Error: Forbidden - SessionId provided does not match the Program owner Id",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request body failed validation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/image/{id}": {
      "get": {
        "summary": "Program image or placeholder",
        "operationId": "getImage",
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the program",
            "schema": {
              "type": "string",
              "pattern": "/^[a-zA-Z0-9_-]*$/i",
              "minLength": 21,
              "maxLength": 21
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response: Ok - The uploaded Program image or, if one does not exist, the placeholder",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/svg": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Upload a new Program image (old one will be overwritten)",
        "operationId": "postImage",
        "tags": [
          "Images"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the program",
            "schema": {
              "type": "string",
              "pattern": "/^[a-zA-Z0-9_-]*$/i",
              "minLength": 21,
              "maxLength": 21
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response: Ok - Image uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request - Request body has wrong Content Type (should be multipart/form-data)",

          },
          "413": {
            "description": "Error: Request Too Long - Image was over the file size limit",

          },
          "422": {
            "description": "Error: Unprocessable Entity - Request body failed validation or Image was of the wrong file type or No Image was uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}